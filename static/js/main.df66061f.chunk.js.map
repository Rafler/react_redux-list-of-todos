{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","api/data.js","components/TodoList/TodoList.js","store/index.js","App.js","index.js"],"names":["User","_ref","name","email","react_default","a","createElement","Fragment","className","href","concat","TodoItem","todo","completed","components_User_User","user","title","getData","url","fetch","then","response","json","TodoList","todos","map","components_TodoItem_TodoItem","key","id","ACTION_TYPES","LOADING","LOADED","GET_DATA","getPreparedData","type","loading","loaded","initialState","isLoading","isLoaded","store","createStore","state","arguments","length","undefined","action","_objectSpread","window","__REDUX_DEVTOOLS_EXTENSION__","getTodosWithUsers","users","App_objectSpread","find","item","userId","App","getState","dispatch","Promise","all","_ref2","Object","slicedToArray","finally","_this2","this","unsubscribe","subscribe","setState","_store$getState","onClick","components_TodoList_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.df66061f.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name,email }) => (\n  <>\n    <div className=\"header\">{name}</div>\n    <div className=\"item meta\">\n      <i className=\"mail icon\" />\n      <a href={`mailto:${email}`} className=\"content\">{email}</a>\n    </div>\n  </>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport './TodoItem.css';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nconst TodoItem = ({ todo }) => (\n  <div\n    className={\n      todo.completed ? 'ui raised link green card' : 'ui raised link red card'\n    }\n  >\n    <div className=\"content\">\n      <User {...todo.user} />\n      <div className=\"description\">{todo.title}</div>\n      {todo.completed ? (\n        <i className=\"check circle outline green icon\" />\n      ) : (\n        <i className=\"times circle outline red icon\" />\n      )}\n    </div>\n  </div>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","const BASE_URL = 'https://jsonplaceholder.typicode.com/';\nexport const getData = (url) => fetch(`${BASE_URL}${url}`).then(response => response.json());\n","import React from 'react';\nimport './TodoList.css';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <div className=\"ui cards\">\n    {todos.map(todo => (\n      <TodoItem todo={todo} key={todo.id} />))}\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import { createStore } from 'redux';\n\nconst ACTION_TYPES = {\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  GET_DATA: 'GET_DATA',\n};\n\nexport const getPreparedData = (todos) => ({\n  type: ACTION_TYPES.GET_DATA,\n  todos,\n});\n\nexport const loading = () => ({\n  type: ACTION_TYPES.LOADING,\n});\nexport const loaded = () => ({\n  type: ACTION_TYPES.LOADED,\n});\n\nconst initialState = {\n  isLoading: false,\n  isLoaded: false,\n  todos: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.LOADING: {\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n    }\n    case ACTION_TYPES.LOADED: {\n      return {\n        ...state,\n        isLoaded: !state.isLoaded,\n      };\n    }\n    case ACTION_TYPES.GET_DATA: {\n      return {\n        ...state,\n        todos: action.todos,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport './App.css';\nimport './components/TodoItem/TodoItem';\n\nimport { getData } from './api/data';\nimport TodoList from './components/TodoList/TodoList';\nimport {\n  store, loading, loaded, getPreparedData,\n} from './store';\n\nfunction getTodosWithUsers(todos, users) {\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(item => item.id === todo.userId),\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    todos: store.getState().todos,\n  };\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(() => this.setState({\n      todos: store.getState().todos,\n    }));\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  getData = () => {\n    store.dispatch(loading());\n\n    Promise.all([getData('todos'), getData('users')])\n      .then(([todos, users]) => {\n        store.dispatch(getPreparedData(getTodosWithUsers(todos, users)));\n        store.dispatch(loaded());\n      })\n      .finally(() => {\n        store.dispatch(loading());\n      });\n  };\n\n  render() {\n    const {\n      todos, isLoading, isLoaded,\n    } = store.getState();\n    return (\n      <div className=\"app\">\n        {isLoading && (\n          <div className=\"ui segment\">\n            <div className=\"ui active inverted dimmer\">\n              <div className=\"ui large text loader\">Loading</div>\n            </div>\n            <p />\n            <p />\n            <p />\n          </div>\n        )}\n        {!todos.length && !isLoading && (\n          <button onClick={this.getData} className=\"positive ui button\">\n            Click\n          </button>\n        )}\n        {isLoaded && (\n          <>\n            <h1>\n              <span className=\"ui red header\">Static</span>\n              {' '}\n              <span className=\"ui green header\">list</span>\n              {' '}\n              <span className=\"ui yellow header\">of</span>\n              {' '}\n              <span className=\"ui blue header\">todos</span>\n            </h1>\n            <div className=\"ui statistics\">\n              <div className=\"teal statistic\">\n                <div className=\"value\">{todos.length}</div>\n                <div className=\"label\">TODOs</div>\n              </div>\n            </div>\n            <TodoList todos={todos} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}